# Generated by Django 4.2.7 on 2025-01-05 22:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('expiry', 'expiry'), ('damage', 'damage'), ('other', 'other')], max_length=200, null=True)),
                ('update', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ANALGESIC', 'Analgesic'), ('ANAESTHETIC', 'Anaesthetic'), ('ANTIBIOTIC', 'Antibiotic'), ('ANTICOAGULANT', 'Anticoagulant'), ('ANTICONVULSANT', 'Anticonvulsant'), ('ANTIDEPRESSANT', 'Antidepressant'), ('ANTIDIABETIC', 'Antidiabetic'), ('ANTIDIARHEAL', 'Antidiarheal'), ('ANTIEMETIC', 'Antiemetic'), ('ANTIFUNGAL', 'Antifungal'), ('ANTIFIBRINOLYTICS', 'Antifibrinolytics'), ('ANTI_ACNE', 'Anti-Acne'), ('ANTIHISTAMINE', 'Antihistamine'), ('ANTIHYPERTENSIVE', 'Antihypertensive'), ('ANTI-INFLAMMATORY', 'Anti-inflammatory'), ('ANTINEOPLASTIC', 'Antineoplastic'), ('ANTIPARASITIC', 'Antiparasitic'), ('ANTIPSYCHOTIC', 'Antipsychotic'), ('ANTI-TUBERCULOSIS', 'Anti-Tuberculosis'), ('ANTI-UCLER', 'Anti-ulcer'), ('ANTIVIRAL', 'Antiviral'), ('BRONCHODILATOR', 'Bronchodilator'), ('CARDIOVASCULAR', 'Cardiovascular'), ('CNS_STIMULANT', 'CNS Stimulant'), ('CORTICOSTEROID', 'Corticosteroid'), ('CONSUMABLES', 'Consumables'), ('DERMATOLOGICAL', 'Dermatological'), ('DIURETIC', 'Diuretic'), ('GASTROINTESTINAL', 'Gastrointestinal'), ('HORMONE', 'Hormone'), ('IMMUNOSUPPRESSANT', 'Immunosuppressant'), ('LIPID_LOWERING', 'Lipid-lowering'), ('MUSCLE_RELAXANT', 'Muscle Relaxant'), ('NSAID', 'NSAID'), ('OPIOID', 'Opioid'), ('OPHTHALMIC', 'Ophthalmic'), ('PSYCHOTROPIC', 'Psychotropic'), ('SEDATIVES_HYPNOTIC', 'Sedatives/Hypnotic'), ('THYROID_PREPARATION', 'Thyroid Preparation'), ('VACCINE', 'Vaccine'), ('VITAMINS_MINERAL', 'Vitamins and Mineral'), ('OTHER', 'Other')], max_length=200, verbose_name='CLASS OF DRUG')),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='DispensaryLocker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Dispensary Locker', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateField(auto_now_add=True, null=True)),
                ('supply_date', models.DateField(null=True)),
                ('strength', models.CharField(blank=True, max_length=100, null=True, verbose_name='STRENGTH')),
                ('generic_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='GENERIC NAME')),
                ('trade_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='TRADE NAME')),
                ('supplier', models.CharField(blank=True, max_length=100, null=True, verbose_name='SUPPLIER')),
                ('dosage_form', models.CharField(blank=True, choices=[('TABLET', 'TABLET'), ('CAPSULE', 'CAPSULE'), ('SYRUP', 'SYRUP'), ('INJECTION', 'INJECTION'), ('INFUSION', 'INFUSION'), ('SUSPENSION', 'SUSPENSION'), ('SOLUTION', 'SOLUTION'), ('CONSUMABLE', 'CONSUMABLE'), ('POWDER', 'POWDER'), ('GRANULE', 'GRANULE'), ('PELLET', 'PELLET'), ('EMULSION', 'EMULSION'), ('TINCTURE', 'TINCTURE'), ('OINTMENT', 'OINMENT'), ('CREAM', 'CREAM'), ('GEL', 'GEL'), ('SUPPOSITORY', 'SUPPOSITORY'), ('INHALER', 'INHALER'), ('IMPLANT', 'IMPLANT'), ('LOZENGE', 'LOZENGEN'), ('SPRAY', 'SPRAY'), ('TRANSDERMAL PATCH', 'TRANSDERMAL PATCH')], max_length=100, null=True)),
                ('pack_size', models.IntegerField(blank=True, null=True, verbose_name='PACK SIZE')),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='COST PRICE')),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_purchased_quantity', models.PositiveIntegerField(default=0, verbose_name='TOTAL QTY PURCHASED')),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('entered_expiry_period', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='DATE UPDATED')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='added_drugs', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug_category', to='store.category')),
            ],
            options={
                'verbose_name_plural': 'drugs',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('update', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Quantity Available')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_store_drugs', to='store.drug')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_store', to='store.unit')),
            ],
        ),
        migrations.CreateModel(
            name='UnitIssueRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('date_issued', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unitissue_category', to='store.category')),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issued_drugs', to='store.drug')),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('issued_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiving_unit', to='store.unit')),
                ('issued_to_locker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.dispensarylocker')),
                ('moved_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='box_moved', to='store.box')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuing_unit', to='store.unit')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnedDrugs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_info', models.CharField(max_length=100, null=True)),
                ('quantity', models.IntegerField(null=True)),
                ('date', models.DateField(null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='returned_category', to='store.category')),
                ('drug', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.drug')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug_returning', to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='returned_drugs', to='store.unit')),
            ],
            options={
                'verbose_name_plural': 'returned drugs record',
            },
        ),
        migrations.CreateModel(
            name='Restock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('date', models.DateField(null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restock_category', to='store.category')),
                ('drug', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.drug')),
                ('restocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug_restocking', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'restocking record',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='QTY ISSUED')),
                ('date_issued', models.DateField(null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True, verbose_name='REMARKS')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated', models.DateField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug_records', to='store.category')),
                ('drug', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug_records', to='store.drug')),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug_records', to=settings.AUTH_USER_MODEL)),
                ('unit_issued_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.unit')),
            ],
            options={
                'verbose_name_plural': 'drugs issued record',
            },
        ),
        migrations.CreateModel(
            name='LoginActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('browser', models.CharField(blank=True, max_length=255, null=True)),
                ('os', models.CharField(blank=True, max_length=255, null=True)),
                ('device_type', models.CharField(default='pc', max_length=50)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DispenseRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='QTY ISSUED')),
                ('patient_info', models.CharField(max_length=100, null=True)),
                ('dispense_date', models.DateTimeField(auto_now=True)),
                ('updated', models.DateField(auto_now=True)),
                ('balance_quantity', models.PositiveIntegerField(default=0)),
                ('date_issued', models.DateField(null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dispensary_category', to='store.category')),
                ('dispensary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuing_dispensary', to='store.dispensarylocker')),
                ('dispensed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispense_drugs', to='store.drug')),
            ],
        ),
        migrations.AddField(
            model_name='dispensarylocker',
            name='unit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dispensary_locker', to='store.unit'),
        ),
        migrations.CreateModel(
            name='LockerInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.drug')),
                ('locker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='store.dispensarylocker')),
            ],
            options={
                'unique_together': {('locker', 'drug')},
            },
        ),
    ]
